[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "my_mcp_server"
version = "0.1.0"
description = "MCP server with decorators"
readme = "README.md"
authors = [
    {name = "tim", email = "email@example.com"}
]
license = {text = "MIT"}
requires-python = ">=3.11,<3.13"
dependencies = [
    "mcp>=1.0.0",
    "mcp[cli]>=1.0.0",
    "anyio>=4.5",
    "starlette>=0.36.0",
    "uvicorn>=0.27.0",
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "platformdirs>=4.0.0",
    "python-dotenv>=1.0.0",
    "click>=8.0.0",
    "pyyaml>=6.0",
    "loguru>=0.7.0",
]

[project.optional-dependencies]
monitoring = ["psutil>=5.9.0"]
ui = ["streamlit>=1.29.0"]

[project.scripts]
# Single entry point for server that handles both transports
my_mcp_server-server = "my_mcp_server.server.app:main"
my_mcp_server-server-stdio = "my_mcp_server.server.app:main_stdio"
my_mcp_server-server-http = "my_mcp_server.server.app:main_http"
my_mcp_server-server-sse = "my_mcp_server.server.app:main_sse"
my_mcp_server-client = "my_mcp_server.client.app:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["my_mcp_server*"]
namespaces = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --cov=my_mcp_server --cov-report=html --cov-report=term-missing" 